{
  "name": "@dxatscale/sfpowerscripts",
  "description": "A build system for package based development in Salesforce,delivered as a sfdx plugin that can be implemented in any CI/CD system of choice.Read more about the plugin and details here - https://dxatscale.gitbook.io/sfpowerscripts/",
  "version": "6.0.1",
  "author": "dxatscale",
  "bin": {
    "readVars": "./scripts/readVars.sh"
  },
  "bugs": "https://github.com/Accenture/sfpowerscripts/issues",
  "dependencies": {
    "@dxatscale/sfpowerscripts.core": "file:../core",
    "@oclif/command": "^1",
    "@oclif/config": "^1",
    "@oclif/errors": "^1",
    "@salesforce/command": "^2",
    "@salesforce/core": "^2",
    "adm-zip": "^0.5.4",
    "ajv": "^8.1.0",
    "async-retry": "^1.3.1",
    "bottleneck": "^2.19.5",
    "cli-table": "^0.3.4",
    "dotenv": "^8.2.0",
    "file": "^0.2.2",
    "fs-extra": "^9.0.1",
    "glob": "^7.1.6",
    "handlebars": "^4.7.7",
    "hook-std": "^2.0.0",
    "js-yaml": "^4.0.0",
    "lodash": "^4.17.21",
    "markdown-table": "^2.0.0",
    "marked": "^2.0.3",
    "marked-terminal": "^4.1.1",
    "object-hash": "^2.1.1",
    "puppeteer": "^7.1.0",
    "rimraf": "^3.0.2",
    "salesforce-alm": "^50.6.0",
    "semver": "^7.3.4",
    "sfdc-soup": "^1.0.1",
    "shelljs": "0.8.4",
    "simple-git": "^2.31.0",
    "snyk": "^1.518.0",
    "ts-node": "^8",
    "tslib": "^1"
  },
  "devDependencies": {
    "@oclif/dev-cli": "^1",
    "@oclif/plugin-help": "^2",
    "@oclif/test": "^1",
    "@salesforce/dev-config": "1.4.1",
    "@salesforce/sfdx-lwc-jest": "^0.10.4",
    "@types/adm-zip": "^0.4.33",
    "@types/chai": "^4",
    "@types/jest": "^26.0.20",
    "@types/mocha": "^5",
    "@types/node": "^10",
    "chai": "^4",
    "globby": "^8",
    "jest": "^26.6.3",
    "mocha": "^5",
    "nyc": "^14",
    "ts-jest": "^26.5.0",
    "tslint": "^5",
    "typescript": "^4.1.3"
  },
  "engines": {
    "node": ">=8.0.0"
  },
  "files": [
    "/lib",
    "/messages",
    "/npm-shrinkwrap.json",
    "/scripts",
    "/resources"
  ],
  "homepage": "https://github.com/Accenture/sfpowerscripts",
  "keywords": [
    "sfdx-plugin"
  ],
  "license": "MIT",
  "oclif": {
    "commands": "./lib/commands",
    "bin": "sfdx",
    "topics": {
      "sfpowerscripts": {
        "description": "An opinionated salesforce build system (statsd metrics enabled) as a sfdx plugin that can be implemented in any CI/CD system of choice"
      },
      "sfpowerscripts:orchestrator": {
        "description": "Orchestrate packages from a monorepo through its lifecycle, driven by descriptors in your sfdx-project.json"
      },
      "sfpowerscripts:pool": {
        "description": "Manage the pooled orgs created by the sfpowerscripts orchestrator in prepare stage"
      },
      "sfpowerscripts:changelog": {
        "description": "Track your artifacts & user stories as they progress through different environments, with release changelogs"
      },
      "sfpowerscripts:package": {
        "description": "Work with various types of packages such as unlocked/source/data/delta individually"
      },
      "sfpowerscripts:package:data": {
        "description": "Commands to create and install data packages (sfdmu)"
      },
      "sfpowerscripts:package:unlocked": {
        "description": "Commands to create and install unlocked packages"
      },
      "sfpowerscripts:package:source": {
        "description": "Commands to create and install sfpowerscripts source packages"
      },
      "sfpowerscripts:package:version": {
        "description": "Commands to increment version numbers of a package"
      },
      "sfpowerscripts:analyze": {
        "description": "Analyze your projects using static analysis tools such as PMD"
      },
      "sfpowerscripts:apextests": {
        "description": "Trigger Apex Tests and validate apex tests in a package"
      }
    },
    "devPlugins": [
      "@oclif/plugin-help"
    ]
  },
  "repository": "Accenture/sfpowerscripts",
  "scripts": {
    "build": "npm run clean && npm run compile",
    "clean": "rimraf ./lib && rimraf tsconfig.tsbuildinfo",
    "compile": "tsc -b tsconfig.json",
    "snyk-protect": "snyk protect",
    "test": "jest --verbose --coverage --detectOpenHandles",
    "test:unit": "sfdx-lwc-jest",
    "test:unit:debug": "sfdx-lwc-jest --debug",
    "test:unit:watch": "sfdx-lwc-jest --watch"
  },
  "snyk": true
}
